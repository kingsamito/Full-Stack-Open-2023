{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAMITO\\\\fullstackopenpart1\\\\unicafe\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    text,\n    handleClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 43\n  }, this);\n};\n_c = Button;\nconst StatisticLine = _ref2 => {\n  let {\n    text,\n    value\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: `${text}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 48\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: `${value}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 68\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 44\n  }, this);\n};\n_c2 = StatisticLine;\nconst Statistics = _ref3 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref3;\n  const total = good + neutral + bad;\n  const avg = (good - bad) / total;\n  const positive = good / total * 100 + \" %\";\n  if (!total) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"Good\",\n        value: good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"Neutral\",\n        value: neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"Bad\",\n        value: bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"All\",\n        value: total\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"Average\",\n        value: avg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"Positive\",\n        value: positive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Statistics;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setGood(good + 1),\n      text: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setNeutral(neutral + 1),\n      text: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setBad(bad + 1),\n      text: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StatisticLine\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Button","_ref","text","handleClick","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","StatisticLine","_ref2","value","_c2","Statistics","_ref3","good","neutral","bad","total","avg","positive","_c3","App","_s","setGood","setNeutral","setBad","_c4","$RefreshReg$"],"sources":["C:/Users/SAMITO/fullstackopenpart1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = ({ text, handleClick }) => <button onClick={handleClick}>{text}</button>\n\nconst StatisticLine = ({ text, value }) => <tr><td>{`${text}`}</td><td>{`${value}`}</td></tr>\n\nconst Statistics = ({ good, neutral, bad }) => {\n  const total = good + neutral + bad\n  const avg = (good - bad) / total\n  const positive = (good / total) * 100 + \" %\"\n\n  if (!total) {\n    return (<p>No feedback given</p>)\n  }\n\n  return (\n    <table>\n      <tbody>\n        <StatisticLine text=\"Good\" value={good} />\n        <StatisticLine text=\"Neutral\" value={neutral} />\n        <StatisticLine text=\"Bad\" value={bad} />\n        <StatisticLine text=\"All\" value={total} />\n        <StatisticLine text=\"Average\" value={avg} />\n        <StatisticLine text=\"Positive\" value={positive} />\n      </tbody>\n    </table>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n\n  return (\n    <div>\n      <h2>Give feedback</h2>\n      <Button handleClick={() => setGood(good + 1)} text=\"Good\" />\n      <Button handleClick={() => setNeutral(neutral + 1)} text=\"Neutral\" />\n      <Button handleClick={() => setBad(bad + 1)} text=\"Bad\" />\n      <h2>Statistics</h2>\n      <Statistics good={good} neutral={neutral} bad={bad} />\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}